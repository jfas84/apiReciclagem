# Generated by Django 4.2.20 on 2025-05-10 17:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Condominio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('endereco', models.TextField()),
                ('numero_apartamentos', models.IntegerField(help_text='Número total de apartamentos no condomínio', validators=[django.core.validators.MinValueValidator(1)])),
            ],
        ),
        migrations.CreateModel(
            name='TipoResiduo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParametroCalculo',
            fields=[
                ('tipo_residuo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.tiporesiduo')),
                ('fator_emissao_padrao', models.FloatField(help_text='Fator de emissão padrão para este tipo de resíduo (kg CO2/kg)', validators=[django.core.validators.MinValueValidator(0)])),
                ('eficiencia_reciclagem', models.FloatField(help_text='Porcentagem de redução de emissão pela reciclagem', max_length=100, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='CalculoCredito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peso_residuo', models.FloatField(help_text='Peso do resíduo em kg', validators=[django.core.validators.MinValueValidator(0)])),
                ('data_coleta', models.DateTimeField(auto_now_add=True)),
                ('emissao_carbono_atual', models.FloatField(help_text='Emissão de carbono do método atual de descarte (kg CO2)', validators=[django.core.validators.MinValueValidator(0)])),
                ('emissao_carbono_reciclagem', models.FloatField(help_text='Emissão de carbono se reciclado (kg CO2)', validators=[django.core.validators.MinValueValidator(0)])),
                ('economia_carbono', models.FloatField(help_text='Economia de carbono pela reciclagem (kg CO2)', validators=[django.core.validators.MinValueValidator(0)])),
                ('custo_descarte_atual', models.DecimalField(blank=True, decimal_places=2, help_text='Custo atual de descarte (R$)', max_digits=10, null=True)),
                ('custo_reciclagem', models.DecimalField(blank=True, decimal_places=2, help_text='Custo potencial de reciclagem (R$)', max_digits=10, null=True)),
                ('condominio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.condominio')),
                ('tipo_residuo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tiporesiduo')),
            ],
            options={
                'verbose_name': 'Cálculo de Crédito de Carbono',
                'verbose_name_plural': 'Cálculos de Crédito de Carbono',
                'unique_together': {('condominio', 'tipo_residuo', 'data_coleta')},
            },
        ),
    ]
